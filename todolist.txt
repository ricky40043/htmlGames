2種人目前的玩法是操作網頁，我要有一個模式是像是Kahoot，
1.創建房間．這時跳出QR CODE 讓大家掃描，大家掃描完要輸入自己的名字
2.大家都掃描完可以選擇幾輪或幾題
3.開始遊戲 後每一題都會有一個人輪流當主角，會顯示在主畫面，目前是ＸＸＸ，大家同時在自己手機上回答
4.回答完後會顯示答案，並顯示大家的分數（猜的跟主角一樣就得分，越快越高分）
5.主畫面會倒數計時，倒數到0會自動跳到下一個問題，如果還沒有答題就是分，主角沒有答題這題就不計分，全部人都作答完就會顯示大家得分排名，然後過五秒跳到下一題
6.全部人都作答完一輪或是到達指定題數，遊戲結束，就會顯示前三名
7.頒獎前三名的畫面要漂亮一點，動態

技術：
前端：都可以，最好使用vue
後端：使用ＧＯ、websocket
資料庫：都可以

## 📋 Kahoot風格多人遊戲實作步驟

### 階段一：技術架構規劃 (1-2天) ✅ **已完成**
- [x] 確定技術棧架構 ✅
  - [x] 前端：Vue.js + Socket.io-client ✅
  - [x] 後端：Go + Gorilla WebSocket ✅
  - [x] 資料庫：Redis (快取) + PostgreSQL (持久化) ✅
- [x] 設計系統架構圖 ✅
- [x] 設計資料庫 schema ✅
- [x] 設計 WebSocket 訊息格式 ✅

### 階段二：後端基礎建設 (2-3天) ✅ **已完成**
- [x] Go 專案初始化 ✅
- [x] WebSocket 連線管理系統 ✅
- [x] 房間管理系統 (創建/加入/離開) ✅
- [x] 玩家狀態管理 ✅
- [x] 遊戲狀態機設計 ✅
- [x] QR Code 生成服務 ✅
- [x] Redis 快取層建立 ✅

### 階段三：前端基礎建設 (2-3天) ✅ **已完成**
- [x] Vue 專案初始化 + 路由設計 ✅
- [x] Socket.io 連線管理 ✅
- [x] 主畫面 (房間管理者視角) ✅
- [x] 玩家手機端介面 ✅
- [x] QR Code 掃描功能 ✅
- [x] 響應式設計適配 ✅

### 階段四：核心遊戲邏輯 (3-4天) ✅ **已完成**
- [x] 房間創建與 QR Code 顯示 ✅
- [x] 玩家加入流程 ✅
- [x] 遊戲設定 (輪數/題數選擇) ✅
- [x] 主持人遊戲控制介面 ✅
- [x] 題目輪播系統 ✅
- [x] 主角輪替邏輯 ✅
- [x] 答題計時系統 ✅
- [x] 即時計分算法 ✅

### 階段五：實時互動功能 (2-3天)
- [ ] WebSocket 訊息廣播
- [ ] 答題狀態同步
- [ ] 即時排行榜更新
- [ ] 倒數計時同步
- [ ] 自動跳題機制

### 階段六：UI/UX 優化 (2-3天)
- [ ] 主畫面美化設計
- [ ] 手機端操作優化
- [ ] 答題動畫效果
- [ ] 排行榜動畫
- [ ] 頒獎頁面設計 (前三名特效)
- [ ] 音效整合

### 階段七：測試與部署 (1-2天)
- [ ] 多人連線測試
- [ ] 跨設備兼容性測試
- [ ] 網路延遲處理
- [ ] 錯誤處理機制
- [ ] 部署到 Vercel/Heroku

### 技術細節筆記：
- WebSocket 訊息類型：JOIN_ROOM, START_GAME, SUBMIT_ANSWER, NEXT_QUESTION 等
- 計分規則：答對 + 速度加分
- 房間狀態：WAITING, PLAYING, SCORING, FINISHED

## 📝 開發進度記錄
- [ ] 開始日期：____
- [ ] 預計完成：13-20天
- [ ] 實際完成：____
